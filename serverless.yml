service: coupon-code-validator

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION, 'ap-southeast-1'}
  stage: ${opt:stage, 'dev'}
  timeout: 30

  # Environment variables
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    SERVICE_NAME: ${self:service}-${self:provider.stage}
    DYNAMODB:
      Ref: CouponCodesTable

  # IAM Role Statements
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - "Fn::GetAtt": [CouponCodesTable, Arn]

functions:
  createCouponCode:
    handler: Lambdas/CreateCouponCode/index.handler
    name: createCouponCode-${self:provider.stage}
    package:
      individually: true
      artifact: "./dist/createCouponCode.zip"
    events:
      - http:
          path: /coupon
          method: POST
          cors: true

  listCouponCodes:
    handler: Lambdas/ListCouponCodes/index.handler
    name: listCouponCodes-${self:provider.stage}
    package:
      individually: true
      artifact: "./dist/listCouponCodes.zip"
    events:
      - http:
          path: /coupons
          method: GET
          cors: true

  validateCouponCodes:
    handler: Lambdas/ValidateCouponCodes/index.handler
    name: validateCouponCodes-${self:provider.stage}
    package:
      individually: true
      artifact: "./dist/validateCouponCodes.zip"
    events:
      - http:
          path: /coupon
          method: GET
          cors: true

resources:
  Resources:
    CouponCodesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: "CouponCodes-${self:provider.stage}"
        AttributeDefinitions:
          - AttributeName: couponId
            AttributeType: S
        KeySchema:
          - AttributeName: couponId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
